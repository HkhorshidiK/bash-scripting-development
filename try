#!/bin/bash

# set rgx variable with integer regex pattern
rgx='^[0-9]+$'

# set args variable with all aruments
args=$@

# this variable is used to retry incorrect command in while command.
try_number2=1



if [[ ! -z $args ]]; then   #check that try command has arguments

	for i in $@;do #for in all arguments

		if [[ $1 == "-i" ]];then # 1st argument must be ' -i '
			if [[ ! $2 =~ $rgx ]];then  #check that 2nd argument is integer
				echo "when use -i , you should use integer after -i"
				exit 1
			else
				if [[ $2 -gt 100 ]];then
					echo "interval must be between 0 and 100"
					exit
				else
					try_interval=$2 
				fi

				if [[ $3 == "-n" ]];then  
					if [[ ! $4 =~ $rgx ]];then	
						echo "when use -n , you should use integer after -n"
		                                exit 1
					else
						if [[ $4 -gt 100 ]];then
	                                	        echo "number argument must be between 0 and 100"
	                        	                exit
	                	                else
	        	                                try_number=$4
		                                fi

						if [[ -z $5 ]];then #check that 5th argument is not null
							echo "you should enter a COMMAND"
							exit 1
						elif [[ $5 =~ $rgx ]];then
							echo "The command cannot be numeric"
							exit 1
                                                elif [[ $5 =~ ^-(.*) ]];then
                                                        echo "you should enter correct COMMAND"
                                                        exit 1
						else 
							shift 4 #if arguments 1 to 4 are OK, shift 4 to ramove them
							command=$@ #because of previous step,all arguments is equal to desired COMMAND
							
							while true; do	#repeat while exit 0 OR exit 1 in end					

								$command	
								cmdResult=$? #save exit code of command to prevent mistake due to changes of exit code 
								try_number2=$((try_number2+1)) #increment my counter to exit while
								if [[ $cmdResult -eq 0 ]]; then	
									exit 0
								else
									if [[ $try_number2 -le $try_number ]];then
										sleep $try_interval
										continue
									else
										echo "oh! Sorry ,your command not found :(" > /dev/stderr
										exit 1
									fi
								
								fi						
							done	

						fi
					fi
				else
		                        echo "third argument must be only '-n'"
					exit 1
				fi
			fi
		else
			echo "first argument must be only '-i'"
			exit 1
		fi

	done
else
	echo "you should enter at least COMMAND argument"
fi
 
